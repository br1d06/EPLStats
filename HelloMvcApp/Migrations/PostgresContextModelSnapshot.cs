// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WOD.WebUI.Data;

#nullable disable

namespace WOD.WebUI.Migrations
{
    [DbContext(typeof(PostgresContext))]
    partial class PostgresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FootballClubMatch", b =>
                {
                    b.Property<int>("MatchParticipantsId")
                        .HasColumnType("integer");

                    b.Property<int>("MatchesId")
                        .HasColumnType("integer");

                    b.HasKey("MatchParticipantsId", "MatchesId");

                    b.HasIndex("MatchesId");

                    b.ToTable("FootballClubMatch");
                });

            modelBuilder.Entity("WOD.Domain.Models.FootballClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Games")
                        .HasColumnType("smallint");

                    b.Property<byte>("GoalsAgainst")
                        .HasColumnType("smallint");

                    b.Property<short>("GoalsDifference")
                        .HasColumnType("smallint");

                    b.Property<byte>("GoalsFor")
                        .HasColumnType("smallint");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Losses")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte>("Points")
                        .HasColumnType("smallint");

                    b.Property<byte>("Rank")
                        .HasColumnType("smallint");

                    b.Property<byte>("Ties")
                        .HasColumnType("smallint");

                    b.Property<byte>("Wins")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("FootballClubs");
                });

            modelBuilder.Entity("WOD.Domain.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("AwayFootballClubGoals")
                        .HasColumnType("smallint");

                    b.Property<byte>("HomeFootballClubGoals")
                        .HasColumnType("smallint");

                    b.Property<int>("MatchResult")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("WOD.Domain.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("WOD.Domain.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte>("Assists")
                        .HasColumnType("smallint");

                    b.Property<int>("FootballClubId")
                        .HasColumnType("integer");

                    b.Property<byte>("Goals")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FootballClubId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FootballClubMatch", b =>
                {
                    b.HasOne("WOD.Domain.Models.FootballClub", null)
                        .WithMany()
                        .HasForeignKey("MatchParticipantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WOD.Domain.Models.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WOD.Domain.Models.Player", b =>
                {
                    b.HasOne("WOD.Domain.Models.FootballClub", "FootballClub")
                        .WithMany("Players")
                        .HasForeignKey("FootballClubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Player_FootballClub");

                    b.Navigation("FootballClub");
                });

            modelBuilder.Entity("WOD.Domain.Models.FootballClub", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
